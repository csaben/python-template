[build-system]
requires = ["setuptools>=61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.package_name }}"
description = "{{ cookiecutter.description }}"
readme = "README.md"
requires-python = ">=3.9"
authors = [{ name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" }]
keywords = []
classifiers = []
{% if cookiecutter.homepage_url != "" and cookiecutter.documentation_url != "" and cookiecutter.repository_url != "" -%}
urls = { homepage = "{{ cookiecutter.homepage_url }}", documentation = "{{ cookiecutter.documentation_url }}", repository = "{{ cookiecutter.repository_url }}" }
{%- elif cookiecutter.homepage_url != "" and cookiecutter.documentation_url != "" -%}
urls = { homepage = "{{ cookiecutter.homepage_url }}", documentation = "{{ cookiecutter.documentation_url }}" }
{%- elif cookiecutter.homepage_url != "" and cookiecutter.repository_url != "" -%}
urls = { homepage = "{{ cookiecutter.homepage_url }}", repository = "{{ cookiecutter.repository_url }}" }
{%- elif cookiecutter.documentation_url != "" and cookiecutter.repository_url != "" -%}
urls = { documentation = "{{ cookiecutter.documentation_url }}", repository = "{{ cookiecutter.repository_url }}" }
{%- elif cookiecutter.homepage_url != "" -%}
urls = { homepage = "{{ cookiecutter.homepage_url }}" }
{%- elif cookiecutter.documentation_url != "" -%}
urls = { documentation = "{{ cookiecutter.documentation_url }}" }
{%- elif cookiecutter.repository_url != "" -%}
urls = { repository = "{{ cookiecutter.repository_url }}" }
{%- else -%}
urls = {}
{%- endif %}
scripts = { {{cookiecutter.cli_command}} = "{{cookiecutter.module_name}}.__main__:{{ cookiecutter.package_name.replace('-', '_') }}" }
dependencies = ["click"]
optional-dependencies = { dev = [
    "ruff",
    "black",
    "isort",
    "mypy",
    "types-setuptools",
    "pytest",
] }
dynamic = ["version"]

[tool.setuptools]
zip-safe = true
include-package-data = true

[tool.setuptools.dynamic]
version = { file = ["src/{{ cookiecutter.module_name }}/VERSION.txt"] }

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]
known_first_party = "{{ cookiecutter.module_name }}"

[tool.mypy]
disallow_any_unimported = true
disallow_untyped_defs = true
disallow_any_generics = true
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
show_error_codes = true

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["B", "C90", "E", "F", "W"]
ignore = ["E501"]

[tool.ruff.lint.isort]
known-first-party = ["{{ cookiecutter.module_name }}"]

[tool.ruff.lint.mccabe]
max-complexity = 18